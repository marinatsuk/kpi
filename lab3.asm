;--------------------------------------------------------------------------------- 	
;ЛР №3. Дослідження механізмів адресації архітектури ІА-32 (X86) у Real Adress Mode
;-----------------------------------------------------------------------------
TITLE LAB3
;---------------------------------------------------------------
; Архітектура комп'ютера
; Завдання:  Створити двовимірний масив array2Db, що складається з елементів в один байт,
; має розмір 16х16. Записати на діагональ масиву ініціали студентів групи.
; ВУЗ:       КНУУ КПІ
; Факультет:   ФІОТ
; Курс:     1
; Група:    ІТ-03
;---------------------------------------------------------------
; Автори: Бублик, Дудченко, Цуканова
; Дата: 17.03.2021

;---------------------------ЗАГОЛОВОК ПРОГРАМИ------------------

  IDEAL      ; Директива - тип Асемблера tasm
  MODEL small    ; Директива - тип моделі пам'яті
  STACK 256    ; Директива - розмір стеку в байтах

;---------------------------МАКРОСИ-----------------------------
; макрос для ініціалізації
MACRO M_Init     ; Початок макросу
  mov ax,@data   ; ax <- @data
  mov ds,ax     ; ds <- ax
  mov es,ax     ; es <- ax
ENDM M_Init     ; Кінець макросу
; макрос для переміщення в масиві
MACRO M_Inc
  inc si ; збільшуємо si на 1, таким чином рухаємося по горизонталі на 1
  add bx, 10h ; збільшуємо bx на 10, таким чином рухаємося по вертикалі на 10
ENDM M_Inc 
;---------------------------ПОЧАТОК СЕГМЕНТУ ДАНИХ--------------

DATASEG
;Оголошення двовимірного масиву 16х16
  array2Db db 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8 
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 0, 0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0
      db 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8 
  exCode db 0      ; Код виходу

;----------------------IV. ПОЧАТОК СЕГМЕНТУ КОДУ-------------------
CODESEG
  Start:
  M_Init          
  ; використовуємо макрос
;-------------------------Ініціалізація DS і ES--------------------
  mov ax, @data ; ax <- @data
  mov ds, ax   ; ds <- ax
  mov es, ax ; es <- ax
  mov si, 00h ; Індексний регістр пересування по горизонталі
  mov bx, 70h ; Базовий регістр пересування по вертикалі - 8
 
  mov al, 054h       ; Записуємо до АL - "T"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос
  mov al, 04Dh       ; Записуємо до АL - "M"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос
  mov al, 053h       ; Записуємо до АL - "S"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос
;------------------------------------------------------------------
  mov al, 054h       ; Записуємо до АL - "T"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос
  mov al, 04Dh       ; Записуємо до АL - "M"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос
  mov al, 053h       ; Записуємо до АL - "S"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос
;------------------------------------------------------------------
  mov al, 054h       ; Записуємо до АL - "T"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос
  mov al, 04Dh       ; Записуємо до АL - "M"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос
  mov al, 053h       ; Записуємо до АL - "S"
  mov [array2Db+bx+si], al; M(DS*16+array2Db+BX+SI)
  M_Inc        ; Виконується макрос 

;-------------------------Вихід з програми-------------------------
  mov ah, 4ch
  mov al, [exCode] ; отримання коду виходу
  int 21h ; виклик функції DOS 4ch
  end Start
